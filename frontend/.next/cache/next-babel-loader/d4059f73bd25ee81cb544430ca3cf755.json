{"ast":null,"code":"var _jsxFileName = \"/Users/charlescarrier/Dev/marylandLettersProject/frontend/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport fetch from \"isomorphic-unfetch\";\nimport { Fragment } from \"react\";\n\nconst Index = props => {\n  return __jsx(\"div\", {\n    className: \"container m-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    dangerouslySetInnerHTML: {\n      __html: props.data\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }));\n}; // Index.getInitialProps = async () => {\n//   const response = await fetch(\"http://localhost:5500/api/letter/1\");\n//   const data = await response.json();\n//   let formattedData = data[0].text.replace(/\\r/g, '<p class=\"mb-2\"></p>');\n//   let formattedData2 = formattedData.replace(\n//     /\\t/g,\n//     '<span class=\"pl-4\"></span>'\n//   );\n//   return { data: formattedData2 };\n// };\n\n\nIndex.getInitialProps = async () => {\n  const response = await fetch(\"http://localhost:5500/api/letter/1\");\n  const data = await response.json();\n  let textToArray = data[0].text.split(\"\");\n  let testText = \"\\tMonday May 9\\rMrs. Jervis\\rDear Madam,\\rThe Dr. pronounced\\rVery regard\\r\\tTruly yours,\\r\\tJ. H. Sullivan\"; // <span class=\"pl-4\">Monday May 9</span><p> Mrs. Jervis</p><p>Dear Madam,\n  // </p>The Dr. pronounced<p><p>Very regard</p><span span class=\"pl-4\">Truly yours,\n  // </span><p><span span class=\"pl-4\">J. H. Sullivan</span></p>\n\n  let testTextToArray = testText.split(\"\");\n  const tab = /\\t/g;\n  const lineBreak = /\\r/g;\n  let paragraphOpen = false;\n  let spanOpen = false;\n  console.log(testTextToArray);\n\n  for (let i = 0; i < testTextToArray.length; i++) {\n    if (!spanOpen) {\n      if (testTextToArray[i] == \"\\t\") {\n        console.log(\"Test\");\n      }\n    }\n  } // for (let i = 0; i < testTextToArray.length; i++) {\n  //   if (testTextToArray[i].match(tab) && paragraphOpen == false) {\n  //     testTextToArray[i] = '<span class=\"pl-4\">';\n  //     // console.log(testTextToArray[i] + \"tab\");\n  //   } else if (testTextToArray[i].match(tab) && paragraphOpen == true) {\n  //     testTextToArray[i] = '</p><span class=\"pl-4\">';\n  //     paragraphOpen = false;\n  //   } else if (testTextToArray[i].match(lineBreak)) {\n  //     // textToArray[i - 1] = \"</span>\";\n  //     testTextToArray[i] = \"</span><p>\";\n  //     paragraphOpen = true;\n  //     // console.log(testTextToArray[i] + \"lineBreak\");\n  //   }\n  // }\n  // console.log(testTextToArray);\n\n\n  return {\n    data: data\n  };\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/charlescarrier/Dev/marylandLettersProject/frontend/pages/index.js"],"names":["fetch","Fragment","Index","props","__html","data","getInitialProps","response","json","textToArray","text","split","testText","testTextToArray","tab","lineBreak","paragraphOpen","spanOpen","console","log","i","length"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,oBAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAEA,MAAMC,KAAK,GAAGC,KAAK,IAAI;AACrB,SACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,uBAAuB,EAAE;AAAEC,MAAAA,MAAM,EAAED,KAAK,CAACE;AAAhB,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAcD,CAfD,C,CAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAH,KAAK,CAACI,eAAN,GAAwB,YAAY;AAClC,QAAMC,QAAQ,GAAG,MAAMP,KAAK,CAAC,oCAAD,CAA5B;AACA,QAAMK,IAAI,GAAG,MAAME,QAAQ,CAACC,IAAT,EAAnB;AACA,MAAIC,WAAW,GAAGJ,IAAI,CAAC,CAAD,CAAJ,CAAQK,IAAR,CAAaC,KAAb,CAAmB,EAAnB,CAAlB;AACA,MAAIC,QAAQ,GACV,6GADF,CAJkC,CAMlC;AACA;AACA;;AACA,MAAIC,eAAe,GAAGD,QAAQ,CAACD,KAAT,CAAe,EAAf,CAAtB;AACA,QAAMG,GAAG,GAAG,KAAZ;AACA,QAAMC,SAAS,GAAG,KAAlB;AACA,MAAIC,aAAa,GAAG,KAApB;AACA,MAAIC,QAAQ,GAAG,KAAf;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYN,eAAZ;;AAEA,OAAK,IAAIO,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,eAAe,CAACQ,MAApC,EAA4CD,CAAC,EAA7C,EAAiD;AAC/C,QAAI,CAACH,QAAL,EAAe;AACb,UAAIJ,eAAe,CAACO,CAAD,CAAf,IAAsB,IAA1B,EAAgC;AAC9BF,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACD;AACF;AACF,GAtBiC,CAwBlC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;AACA,SAAO;AAAEd,IAAAA,IAAI,EAAEA;AAAR,GAAP;AACD,CAzCD;;AA2CA,eAAeH,KAAf","sourcesContent":["import fetch from \"isomorphic-unfetch\";\nimport { Fragment } from \"react\";\n\nconst Index = props => {\n  return (\n    <div className=\"container m-4\">\n      <div dangerouslySetInnerHTML={{ __html: props.data }} />\n      {/* {props.data.map(letter => {\n        return (\n          <div key={letter.letter_id}>\n            <p>{letter.text}</p>\n            <br />\n            <p>{letter.fromFirstName}</p>\n          </div>\n        );\n      })} */}\n    </div>\n  );\n};\n\n// Index.getInitialProps = async () => {\n//   const response = await fetch(\"http://localhost:5500/api/letter/1\");\n//   const data = await response.json();\n//   let formattedData = data[0].text.replace(/\\r/g, '<p class=\"mb-2\"></p>');\n//   let formattedData2 = formattedData.replace(\n//     /\\t/g,\n//     '<span class=\"pl-4\"></span>'\n//   );\n//   return { data: formattedData2 };\n// };\n\nIndex.getInitialProps = async () => {\n  const response = await fetch(\"http://localhost:5500/api/letter/1\");\n  const data = await response.json();\n  let textToArray = data[0].text.split(\"\");\n  let testText =\n    \"\\tMonday May 9\\rMrs. Jervis\\rDear Madam,\\rThe Dr. pronounced\\rVery regard\\r\\tTruly yours,\\r\\tJ. H. Sullivan\";\n  // <span class=\"pl-4\">Monday May 9</span><p> Mrs. Jervis</p><p>Dear Madam,\n  // </p>The Dr. pronounced<p><p>Very regard</p><span span class=\"pl-4\">Truly yours,\n  // </span><p><span span class=\"pl-4\">J. H. Sullivan</span></p>\n  let testTextToArray = testText.split(\"\");\n  const tab = /\\t/g;\n  const lineBreak = /\\r/g;\n  let paragraphOpen = false;\n  let spanOpen = false;\n  console.log(testTextToArray);\n\n  for (let i = 0; i < testTextToArray.length; i++) {\n    if (!spanOpen) {\n      if (testTextToArray[i] == \"\\t\") {\n        console.log(\"Test\");\n      }\n    }\n  }\n\n  // for (let i = 0; i < testTextToArray.length; i++) {\n  //   if (testTextToArray[i].match(tab) && paragraphOpen == false) {\n  //     testTextToArray[i] = '<span class=\"pl-4\">';\n  //     // console.log(testTextToArray[i] + \"tab\");\n  //   } else if (testTextToArray[i].match(tab) && paragraphOpen == true) {\n  //     testTextToArray[i] = '</p><span class=\"pl-4\">';\n  //     paragraphOpen = false;\n  //   } else if (testTextToArray[i].match(lineBreak)) {\n  //     // textToArray[i - 1] = \"</span>\";\n  //     testTextToArray[i] = \"</span><p>\";\n  //     paragraphOpen = true;\n\n  //     // console.log(testTextToArray[i] + \"lineBreak\");\n  //   }\n  // }\n  // console.log(testTextToArray);\n  return { data: data };\n};\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}