{"ast":null,"code":"var _jsxFileName = \"/Users/charlescarrier/Dev/marylandLettersProject/frontend/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport fetch from \"isomorphic-unfetch\";\nimport { Fragment } from \"react\";\n\nconst Index = props => {\n  return __jsx(\"div\", {\n    className: \"container m-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    dangerouslySetInnerHTML: {\n      __html: props.data\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }));\n}; // Index.getInitialProps = async () => {\n//   const response = await fetch(\"http://localhost:5500/api/letter/1\");\n//   const data = await response.json();\n//   let formattedData = data[0].text.replace(/\\r/g, '<p class=\"mb-2\"></p>');\n//   let formattedData2 = formattedData.replace(\n//     /\\t/g,\n//     '<span class=\"pl-4\"></span>'\n//   );\n//   return { data: formattedData2 };\n// };\n\n\nIndex.getInitialProps = async () => {\n  const response = await fetch(\"http://localhost:5500/api/letter/1\");\n  const data = await response.json();\n  let textToArray = data[0].text.split(\"\");\n  let testTextToArray = '\\tMonday morning May 9\\rMrs. Jervis\\rDear Madam,\\rThe Dr. pronounced Mrs. Sullivan’s illness \"Gastric fever.” She has passed the crisis, but is still very feeble. Dr. Hines says she must not expect to get along very fast. We hope however that her convalescence will be continuous.\\rVery much obliged for what you sent over. With much regard\\r\\tTruly yours,\\r\\tJ. H. Sullivan';\n  console.log(textToArray);\n  const tab = /\\t/g;\n  const lineBreak = /\\r/g;\n  let openParagraph = false;\n\n  for (let i = 0; i < testTextToArray.length; i++) {\n    if (testTextToArray[i].match(tab) && openParagraph == false) {\n      testTextToArray[i] = '<span class=\"pl-4\">'; // console.log(testTextToArray[i] + \"tab\");\n    } else if (testTextToArray[i].match(tab) && openParagraph == true) {\n      testTextToArray[i] = '</p><span class=\"pl-4\">';\n      openParagraph = false;\n    } else if (testTextToArray[i].match(lineBreak)) {\n      // textToArray[i - 1] = \"</span>\";\n      testTextToArray[i] = \"</span><p>\";\n      openParagraph = true; // console.log(testTextToArray[i] + \"lineBreak\");\n    }\n  }\n\n  console.log(textToArray);\n  return {\n    data: data\n  };\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/charlescarrier/Dev/marylandLettersProject/frontend/pages/index.js"],"names":["fetch","Fragment","Index","props","__html","data","getInitialProps","response","json","textToArray","text","split","testTextToArray","console","log","tab","lineBreak","openParagraph","i","length","match"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,oBAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAEA,MAAMC,KAAK,GAAGC,KAAK,IAAI;AACrB,SACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,uBAAuB,EAAE;AAAEC,MAAAA,MAAM,EAAED,KAAK,CAACE;AAAhB,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAcD,CAfD,C,CAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAH,KAAK,CAACI,eAAN,GAAwB,YAAY;AAClC,QAAMC,QAAQ,GAAG,MAAMP,KAAK,CAAC,oCAAD,CAA5B;AACA,QAAMK,IAAI,GAAG,MAAME,QAAQ,CAACC,IAAT,EAAnB;AACA,MAAIC,WAAW,GAAGJ,IAAI,CAAC,CAAD,CAAJ,CAAQK,IAAR,CAAaC,KAAb,CAAmB,EAAnB,CAAlB;AACA,MAAIC,eAAe,GACjB,wXADF;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,WAAZ;AACA,QAAMM,GAAG,GAAG,KAAZ;AACA,QAAMC,SAAS,GAAG,KAAlB;AACA,MAAIC,aAAa,GAAG,KAApB;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,eAAe,CAACO,MAApC,EAA4CD,CAAC,EAA7C,EAAiD;AAC/C,QAAIN,eAAe,CAACM,CAAD,CAAf,CAAmBE,KAAnB,CAAyBL,GAAzB,KAAiCE,aAAa,IAAI,KAAtD,EAA6D;AAC3DL,MAAAA,eAAe,CAACM,CAAD,CAAf,GAAqB,qBAArB,CAD2D,CAE3D;AACD,KAHD,MAGO,IAAIN,eAAe,CAACM,CAAD,CAAf,CAAmBE,KAAnB,CAAyBL,GAAzB,KAAiCE,aAAa,IAAI,IAAtD,EAA4D;AACjEL,MAAAA,eAAe,CAACM,CAAD,CAAf,GAAqB,yBAArB;AACAD,MAAAA,aAAa,GAAG,KAAhB;AACD,KAHM,MAGA,IAAIL,eAAe,CAACM,CAAD,CAAf,CAAmBE,KAAnB,CAAyBJ,SAAzB,CAAJ,EAAyC;AAC9C;AACAJ,MAAAA,eAAe,CAACM,CAAD,CAAf,GAAqB,YAArB;AACAD,MAAAA,aAAa,GAAG,IAAhB,CAH8C,CAK9C;AACD;AACF;;AACDJ,EAAAA,OAAO,CAACC,GAAR,CAAYL,WAAZ;AACA,SAAO;AAAEJ,IAAAA,IAAI,EAAEA;AAAR,GAAP;AACD,CA3BD;;AA6BA,eAAeH,KAAf","sourcesContent":["import fetch from \"isomorphic-unfetch\";\nimport { Fragment } from \"react\";\n\nconst Index = props => {\n  return (\n    <div className=\"container m-4\">\n      <div dangerouslySetInnerHTML={{ __html: props.data }} />\n      {/* {props.data.map(letter => {\n        return (\n          <div key={letter.letter_id}>\n            <p>{letter.text}</p>\n            <br />\n            <p>{letter.fromFirstName}</p>\n          </div>\n        );\n      })} */}\n    </div>\n  );\n};\n\n// Index.getInitialProps = async () => {\n//   const response = await fetch(\"http://localhost:5500/api/letter/1\");\n//   const data = await response.json();\n//   let formattedData = data[0].text.replace(/\\r/g, '<p class=\"mb-2\"></p>');\n//   let formattedData2 = formattedData.replace(\n//     /\\t/g,\n//     '<span class=\"pl-4\"></span>'\n//   );\n//   return { data: formattedData2 };\n// };\n\nIndex.getInitialProps = async () => {\n  const response = await fetch(\"http://localhost:5500/api/letter/1\");\n  const data = await response.json();\n  let textToArray = data[0].text.split(\"\");\n  let testTextToArray =\n    '\\tMonday morning May 9\\rMrs. Jervis\\rDear Madam,\\rThe Dr. pronounced Mrs. Sullivan’s illness \"Gastric fever.” She has passed the crisis, but is still very feeble. Dr. Hines says she must not expect to get along very fast. We hope however that her convalescence will be continuous.\\rVery much obliged for what you sent over. With much regard\\r\\tTruly yours,\\r\\tJ. H. Sullivan';\n  console.log(textToArray);\n  const tab = /\\t/g;\n  const lineBreak = /\\r/g;\n  let openParagraph = false;\n  for (let i = 0; i < testTextToArray.length; i++) {\n    if (testTextToArray[i].match(tab) && openParagraph == false) {\n      testTextToArray[i] = '<span class=\"pl-4\">';\n      // console.log(testTextToArray[i] + \"tab\");\n    } else if (testTextToArray[i].match(tab) && openParagraph == true) {\n      testTextToArray[i] = '</p><span class=\"pl-4\">';\n      openParagraph = false;\n    } else if (testTextToArray[i].match(lineBreak)) {\n      // textToArray[i - 1] = \"</span>\";\n      testTextToArray[i] = \"</span><p>\";\n      openParagraph = true;\n\n      // console.log(testTextToArray[i] + \"lineBreak\");\n    }\n  }\n  console.log(textToArray);\n  return { data: data };\n};\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}